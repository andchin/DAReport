<<initialActions, eval=TRUE, echo=FALSE, term=FALSE>>=
require(car)
require(mlbench)
data(Glass)
Glass.type1 = Glass[which(Glass$Type == 1), -10]
Glass.type2 = Glass[which(Glass$Type == 2), -10]
Glass.type3 = Glass[which(Glass$Type == 3), -10]
Glass.type5 = Glass[which(Glass$Type == 5), -10]
Glass.type6 = Glass[which(Glass$Type == 6), -10]
Glass.type7 = Glass[which(Glass$Type == 7), -10]

Glass.type1s = Glass[which(Glass$Type == 1), -10][,-9][,-8]
Glass.type2s = Glass[which(Glass$Type == 2), -10][,-9][,-8]
Glass.type3s = Glass[which(Glass$Type == 3), -10][,-9][,-8]
Glass.type5s = Glass[which(Glass$Type == 5), -10][,-9][,-8]
Glass.type6s = Glass[which(Glass$Type == 6), -10][,-9][,-8][,-6]
Glass.type7s = Glass[which(Glass$Type == 7), -10][,-9][,-6][,-3]
@
%%%%%
<<chisqTestFunctions, eval=TRUE, echo=FALSE, term=FALSE>>=
### Chi squared test ###

# Calculates bounds of bins (classes) of a data sample.
# The initial bounds are given by initial_breaks, k denotes the minimum class size.
makebins = function(data, initial_breaks, k) {
  h = hist(data, breaks=initial_breaks, plot=FALSE)
  
  br = h$breaks
  changed = TRUE
  
  while(changed) {
    h = hist(data, breaks=br, plot=FALSE)
    br = h$breaks
    changed=FALSE
    
    for(i in 1:length(h$counts)) {
      if(h$counts[i] < k) {
        if(i > 1 && i < length(h$counts)) {
          if(h$counts[i-1] < h$counts[i+1]) {
            br = br[-i]
            changed = TRUE
            break
          }
          else {
            br = br[-(i+1)]
            changed = TRUE
            break
          }
        }
        # index on first class
        else if(i == 1) {
          br = br[-2]
          changed = TRUE
          break
        }
        # index on last class
        else {
          br = br[-(length(h$counts))]
          changed = TRUE
          break
        }
      }
    }
  }
  return(br)
}

# Calculates the expected probabilities of a normal distribution with the given parameters mean and sd
# for the given bin (class) bounds
probabilities.exp = function(bins, mean, sd) {
  result = rep(0, length(bins)-1)
  
  result[1] = pnorm(q=bins[2], mean=mean, sd=sd)
  
  for(i in 2:(length(bins)-1)) {
    result[i] <- pnorm(q=bins[i+1], mean=mean, sd=sd) - pnorm(q=bins[i], mean=mean, sd=sd)
  }
  
  result[length(bins)-1] = pnorm(q=bins[length(bins)-1], mean=mean, sd=sd, lower.tail=FALSE)
  
  return(result)
}

# Returns the chi squared test statistics for the given actual and expected values.
teststat.chi = function(actual, expected) {
  sum((actual - expected)^2 / expected)
}

# Performs a chi squared goodness of fit test on the given data for the assumption of a normal distribution.
# The parameters are estimated from the sample.
# The initial bounds for the classes are given by initial_breaks, min denotes the minimum class size.
# The significance level is determined by sig.
chisq.test.norm = function(data, initial_breaks, min, sig) {
  bins = makebins(data, initial_breaks, min)
  hist = hist(data, breaks=bins, plot=FALSE)
  expected_probabilities = probabilities.exp(bins, mean(data), sd(data))
  expected_frequencies = expected_probabilities * length(data)
  teststat = teststat.chi(hist$counts, expected_frequencies)
  df=length(bins)-4 # df: length(bin) - 1 classes, 2 estimated parameters (mean, sd)
  critical_value = ifelse(df < 1, NA, qchisq(p=1-sig, df=df))
  
  return(list(hist = hist,
              expected_probabilities = expected_probabilities,
              expected_frequencies = expected_frequencies,
              teststat = teststat,
              critical_value = critical_value,
              p_value = ifelse(df < 1, NA, 1 - pchisq(q=teststat, df=df)),
              rejected = teststat > critical_value))
}

chisq.test.norm.eh = function(data, initial_breaks, min, sig) {
  res = tryCatch(chisq.test.norm(data, initial_breaks, min, sig), error=function(e) NA)
  if(is.na(res)) {
    return(list(hist = NA,
                expected_probabilities = NA,
                expected_frequencies = NA,
                teststat = NA,
                critical_value = NA,
                p_value = NA,
                rejected = NA))
  }
  return(res)
}

# Returns class centers (mids) for given breaks.
getMids = function(breaks) {
  mids = rep(0, length(breaks)-1)
  for(i in 1:(length(breaks)-1)) {
    mids[i] = (breaks[i+1] + breaks[i]) / 2
  }
  return(mids)
}

# Creates artificial data from expected frequencies as input for hist().
# testresult is the result of chisq.test.norm.
# mult is the factor by which the frequencies are multiplied (to increase accuracy
# after rounding and casting to integer).
dataFromFreq = function(testresult, mult) {
  x = testresult$expected_frequencies
  mids = getMids(testresult$hist$breaks)
  freqs = as.integer(round(mult*x))
  result = rep(0, sum(freqs))
  counter = 1
  for(i in 1:length(freqs)) {
    for(j in 1:freqs[i]) {
      result[counter] = mids[i]
      counter = counter + 1
    }
  }
  return(result)
}

# Returns a histogram of the expected frequencies from testresult (result of chisq.test.norm).
# Does not plot the histogram.
histFromExpectedFreqs = function(testresult) {
  hist(dataFromFreq(testresult, 1000), breaks=testresult$hist$breaks, freq=FALSE, plot=FALSE)
}
@
%%%%%
<<boxcoxFunctions, eval=TRUE, echo=FALSE, term=FALSE>>=
boxcox = function(x, lambda) {
  if(lambda == 0) {
    return(log(x))
  }
  return((x^lambda - 1) / lambda)
}

boxcox.likelihood = function(X, lambda) {
  n = length(X)
  xlmean = 1/n * sum(boxcox(X, lambda))
  return(
    -n/2 * log(1/n * sum((boxcox(X, lambda) - xlmean)^2)) + (lambda-1) * sum(log(X))
  )
}

powerTransform.eh = function(X) {
  tryCatch(powerTransform(X), error=function(e) NULL)
}

transformDataFrame = function(data) {
  data.lambda = apply(data, 2, powerTransform.eh)
  data.t = data
  for(name in colnames(data.t)) {
    if(is.null(data.lambda[[name]])) {
      col = rep(NA, length(data.t[,1]))
    }
    else {
      col = boxcox(data[[name]], data.lambda[[name]][["lambda"]])
    }
    data.t[[name]] = col
  }
  return(data.t)
}

transformVector = function(data) {
  lambda = powerTransform(data)
  return(boxcox(data, lambda$lambda))
}
@


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Template for the papers to the case studies of Data Analytics
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\documentclass[a4paper, 12pt, titlepage, headsepline, listof = totoc, bibliography = totoc, numbers = noenddot]{scrartcl}
\usepackage[left = 3cm, right = 2cm, top = 2.2cm, bottom = 3.5cm]{geometry} % spaces on the sides of the paper
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{natbib}
\usepackage{scrpage2}
\usepackage{subfigure}
\usepackage{subcaption}
\usepackage{caption}
\frenchspacing

\usepackage{bbm}
\usepackage[labelfont=bf, font=footnotesize, tableposition=top]{caption}
\DeclareCaptionType[fileext=los,placement={!ht}]{listing}
%\usepackage{mdframed}
\usepackage{boxedminipage}
%\usepackage{chngcntr}
%\def \lstWidth {0.9}

\usepackage{float}

\newcommand{\eg}{e.\,g. }
\newcommand{\ie}{i.\,e. }

%% path, where the figures are stored
\graphicspath{{./images/}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% design of the head of the report pages

\clearscrheadings                   	% clears all predefined formats voreingestellte Formatierungen
\pagestyle{scrheadings}			% use this style only on the actual text
\ohead{FirstName LastName}		% writes your name on each side in the upper right corner
\automark{section}                  
\ihead{\headmark}				% automatically writtes the section name in the upper left corner
\cfoot{\pagemark}				% page number on the bottom (center)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% cover sheet

\title{\hrulefill \\ \vspace*{1cm} Case Studies\\\vspace*{0.5cm}
 "Data Analytics" \\ \vspace*{1cm}\hrulefill\vspace*{1.5cm}}
\subtitle{Topic\\\vspace*{1.5cm} Summer Term 2013\vspace*{1.5cm}}
\author{FirstName LastName}
%\institute{e-mail}

\begin{document}
\SweaveOpts{concordance=TRUE}
\thispagestyle{empty}
\maketitle

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% table of contents

\thispagestyle{empty}
\tableofcontents

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the document itself

\newpage
\setcounter{page}{1}
\section{Introduction}

\subsection{Normality as a requirement for statistical methods}

\subsection{The glass data sample}

\subsection{Aim and structure}

\newpage
\section{Preliminaries}

\subsection{Test methods for normality}

A statistical hypothesis test which tests empirical data on conformance with a certain distribution (or a family of distributions) is called a goodness of fit test. The null hypothesis is usually the hypothesis that the tested sample has been drawn from a population which is distributed according to the given distribution. Consequently, the alternative hypothesis states that the sample was drawn from a population of any other distribution. In every test, a certain method is used to calculate a test statistic from the data. If the test statistic exceeds a critical value which is computed for the particular distribution and a certain significance level, the null hypothesis is rejected. The p-value is the lowest significance level for which the null hypothesis would still be rejected. It can be interpreted as the probability of getting a result like the present one or an even more extreme result if the null hypothesis is true.

\subsubsection{Q-Q-plot}\label{sec:qq-theoretical}

Quantile-Quantile-Plots provide a graphical comparison of the quantiles of two probability distributions. The observed values are plotted against the quantiles of a theoretical distribution. To check for normality, the observations $y_1, \dots, y_n$ from a sample with size n are ordered ( $y_1 \le y_2 \le \dots \le y_n$ ) and plotted against an assumed cumulative distribution function. Let $y_{(i)}$ denote the sample quantiles. For each sample quantile $y_{(j)}$ with $j$ observations to the left, the proportion of these $j$ observations is approximated by
\[ p_{(j)} = \frac{j - \frac{1}{2}} {n}\]
and the theoretical quantiles $q_{(j)}$ are defined by
\[ q_{(j)} = \Phi^{-1}(p_{(j)}) \]

Given a sufficient sample size, normally distributed data will be linearly related to the theoretical normal distribution in the QQ-plot.

\subsubsection{Shapiro-Wilk test}\label{sec:shapiro-theoretical}

The Shapiro-Wilk test is a statistical procedure for testing a complete sample for normality. The test statistic (denoted as $W$) indicates the deviation of the observed quantile values from the assumed cumulative distribution function quantiles by comparing the expected variance of the assumed normally distributed quantile values (in the numerator) with the actual variance of the ordered observed sample values (in the denominator):
\[ W = \frac{\sum \limits_{i=1}^n (a_i y_i)^2} {\sum \limits_{i=1}^n (y_i-\bar{y})^2}\]
where
$a_i$ denotes the normalized "best linear unbiased" coefficients and
$y_i$ denotes the ordered observations.

The resulting test statistic $W$ is then compared with a critial $W$-value for a given sample size $n$. The resulting significance level can be looked up in existing tables, however, most statistic software (including R) automatically determines the according p-value via the Monte Carlo method when displaying the test statistic $W$.

Compared to the Kolmogorov-Smirnov test and the Chi-Squared-Test, the Shapiro-Wilk test's statistical power decreases less with smaller samples. Since 4 of 6 glass type samples (glass type 3, 5, 6, and 7) are a the size of $n$ < 50, the test result is quite interesting for the evaluation of these cases.

To conduct the Shapiro-Wilk test in R the function shapiro.test() from the package \textit{stats} was used.

In some datasets certain variables may contain only zeros. In these cases the Shapiro-Wilk-Statistic is not applicable for these specific variables since the expression 
\[ \sum \limits_{i=1}^n (y_i - \bar{y})^2 \]
in the denominator sums up to 0. Tests can therefore only be run if such variables are excluded from the testing procedure.

\subsubsection{Pearson's chi-squared test}\label{sec:chisq-theoretical}
Pearson's chi-squared goodness of fit test is used to test whether data from a sample are distributed according to an arbitrary theoretical distribution. The main idea of this test is to divide the observations $X_1, \dots, X_N$ into several pairwise disjoint classes $C_1, \dots, C_K$ and compare the empirical frequencies within these classes to the theoretical frequencies, which are expected if the data complies to the hypothetical distribution.
\begin{figure}[h!]
<<chisqSampleHist, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
testres = chisq.test.norm(Glass$Na, 30, 5, 0.01)
par(mfrow=c(2,2))
hist=testres$hist
plot(hist, col=rgb(1, 0, 0,0.5), main="(1) Histogram of\n empirical data", xlab="empirical data")
hist.exp=histFromExpectedFreqs(testres)
plot(hist.exp, col=rgb(0, 0, 1,0.5), main="(2) Histogram of\n expected densities", xlab="expected data")
plot(hist, col=rgb(1, 0, 0,0.5), main="(3) Histogram of both empirical\n data and expected densities", xlab="empirical and expected data")
plot(hist.exp, col=rgb(0, 0, 1,0.5), add=TRUE)
par(mfrow=c(1,1))
@
\includegraphics[width=\textwidth]{report-chisqSampleHist}
\caption{Exemplary histrograms of a data sample, expected densities for a normal distribution with parameters estimated from the sample and a combined histogram of these both histograms.}
\label{fig:chisqSampleHist}
\end{figure}
If the histograms of the sample data and the expected densities are plotted together (see figure \ref{fig:chisqSampleHist}), the area of density that is not overlapped by both histograms can be understood as a kind of indicator for the likelihood that the sample is drawn from a population which is distributed according to the hypothetical distribution: The more area is not overlapping, the less likely it is that the sample is drawn from a population with the assumed distribution. However, the test statistic of the chi-squared test is calculated differently, namely by the sum of the squared differences between observed frequencies $O_k$ and expected frequencies $E_k$ divided by the expected frequencies for each class $k$ of the overall $K$ classes. Thus, the test statistic is calculated by
\[\chi^2 = \sum_{k=1}^{K}\frac{(O_k - E_k)^2}{E_k}\]
Larger differences of observed and expected values indicate a lower compliance to the assumed distribution. However, the addends are not weighted (neither by the size of a class nor by the frequencies within a class nor by any other means). Therefore, the class bounds should be chosen equidistant or in such a way that the classes contain preferably the same number of observations or according to similar reasonable rationales. The test statistic is approximately $\chi^2$-distributed with $K-1$ degrees of freedom -- the larger the sample size, the better the approximation. A sample size that is too small can be a reason for the approximation being insufficient. Moreover, for each parameter of the hypothetical distribution which is estimated from the data sample, one degree of freedom is lost; the number of estimated parameters is denoted by $p$. The test statistic is determined under the null hypothesis that the sample is distributed according to the assumed distribution and the chi-squared test is defined as
%\[\phantom{\quad \textrm{with}\ F=\chi^2_{K-1-p}} \delta(Y) = \mathbbm{1}_{\{\chi^2\, >\, F^{-1}(1-\alpha)\}} \quad \mbox{with}\ F=\chi^2_{K-1-p}\]
\[
  \phantom{\quad\mbox{with}\ F=\chi^2_{K-1-p}}
  \delta(Y) =
   \left\{ 
    \begin{array}{cll}
%\vspace{12pt}
                 1 & \mbox{if} \ \chi^2 > F^{-1}(1-\alpha)\\
                 0 & \mbox{otherwise}
    \end{array} 
   \right.
   \quad\mbox{with}\ F=\chi^2_{K-1-p}
\]
for a given significance level $\alpha$ where $Y$ is a multinomial distributed random variable denoting the counts of observations in each class with $Y_k = |\{i : X_i \in C_k\}|$.

As a common requirement for a sufficient approximation, the minimum number of observations in each class should not fall below five. Hence, marginal or even inner classes have to be unified in some cases in order to achieve a sufficient class size. The following R-function is used here for this purpose.
<<makebinsLst, eval=FALSE, echo=TRUE>>=
# Calculates bounds of bins (classes) of a data sample.
# The initial bounds are given by initial_breaks,
# k denotes the minimum class size.
makebins = function(data, initial_breaks, k) {
  h = hist(data, breaks=initial_breaks, plot=FALSE)
  
  br = h$breaks
  changed = TRUE
  
  while(changed) {
    h = hist(data, breaks=br, plot=FALSE)
    br = h$breaks
    changed=FALSE
    
    for(i in 1:length(h$counts)) {
      if(h$counts[i] < k) {
        if(i > 1 && i < length(h$counts)) {
          if(h$counts[i-1] < h$counts[i+1]) {
            br = br[-i]
            changed = TRUE
            break
          }
          else {
            br = br[-(i+1)]
            changed = TRUE
            break
          }
        }
        # index on first class
        else if(i == 1) {
          br = br[-2]
          changed = TRUE
          break
        }
        # index on last class
        else {
          br = br[-(length(h$counts))]
          changed = TRUE
          break
        }
      }
    }
  }
  return(br)
}
@
Further functions are needed for calculating the expected frequencies, the test statistic and the result of the test (since the mean and the standard deviation are estimated from the sample, two degrees of freedom are additionally lost):
<<chisqTestLst, eval=FALSE, echo=TRUE>>=
# Calculates the expected probabilities of a normal distribution
# with the given parameters mean and sd
# for the given bin (class) bounds
probabilities.exp = function(bins, mean, sd) {
  result = rep(0, length(bins)-1)
  
  result[1] = pnorm(q=bins[2], mean=mean, sd=sd)
  
  for(i in 2:(length(bins)-1)) {
    result[i] <- pnorm(q=bins[i+1], mean=mean, sd=sd)
      - pnorm(q=bins[i], mean=mean, sd=sd)
  }
  
  result[length(bins)-1] = pnorm(q=bins[length(bins)-1],
    mean=mean, sd=sd, lower.tail=FALSE)
  
  return(result)
}

# Returns the chi squared test statistics
# for the given actual and expected values.
teststat.chi = function(actual, expected) {
  sum((actual - expected)^2 / expected)
}

# Performs a chi squared goodness of fit test on the given data
# for the assumption of a normal distribution.
# Returns true if the null hypothesis (sample drawn from a
# normal distributed population) is rejected, false otherwise.
# The parameters are estimated from the sample.
# The initial bounds for the classes are given by initial_breaks,
# min denotes the minimum class size.
# The significance level is determined by sig.
chisq.test.norm = function(data, initial_breaks, min, sig) {
  bins = makebins(data, initial_breaks, min)
  hist = hist(data, breaks=bins, plot=FALSE)
  expected_probabilities = probabilities.exp(bins, mean(data), sd(data))
  expected_frequencies = expected_probabilities * length(data)
  teststat = teststat.chi(hist$counts, expected_frequencies)
  
  # length(bin) - 1 classes, 2 estimated parameters (mean, sd)
  df=length(bins)-4
  critical_value = ifelse(df < 1, NA, qchisq(p=1-sig, df=df))
  
  print(teststat > critical_value)
  
  return(list(hist = hist,
              expected_probabilities = expected_probabilities,
              expected_frequencies = expected_frequencies,
              teststat = teststat,
              critical_value = critical_value,
              p_value =
                ifelse(df < 1, NA, 1 - pchisq(q=teststat, df=df)),
              rejected = teststat > critical_value))
}
@
A drawback of Pearson's chi-squared test is its inconsistency caused by information reduction, \ie information about the data sample is lost in the process of categorising the observations in classes. As a consequence, different class bounds can lead to different test results. Furthermore, this test is rather suited for large sample sizes.

\subsubsection{Kolmogorov-Smirnov test}

\subsection{Box-Cox-transformation}\label{sec:boxcox-theory}

If data is not normally distributed, it can still be transformed to fit to a normal distribtion in some cases. One possibility is the Box-Cox-transformation. It is a family of parameterised power tranformations:
\[
  \phantom{\quad\mbox{for}\ x > 0}
   x^{(\lambda)} =
   \left\{ 
    \begin{array}{cl}
%\vspace{12pt}
                 \frac{x^\lambda - 1}{\lambda} & \lambda \neq 0\\
                 \ln(x) & \lambda = 0
    \end{array}
   \right.
   \quad\mbox{for}\ x > 0
\]
The optimal parameter for specific observations $x_1, \dots, x_n$ can be determined by a maximum-likelihood estimation, maximising the log likelihood
\[
\begin{array}{l}
\vspace{12pt}
   l(\lambda) = - \frac{n}{2}\ln\left[\frac{1}{n}\sum_{j=1}^{n}(x_j^{(\lambda)} - \overline{x^{(\lambda)}})^2\right] + (\lambda - 1) \sum_{j=1}^{n}\ln(x_j)\\
   \mbox{with}\ \overline{x^{(\lambda)}} = \frac{1}{n} \sum_{j=1}^{n}x_j^{(\lambda)}
\end{array}
\]
However, a Box-Cox-transformation does not ensure that the data is normally distributed thereafter. One reason that a sample cannot be properly transformed could be that it is not unimodal. Histograms and QQ-plots of a sample from a unimodal distribution are depicted in figure \ref{fig:transformationUnimodal}. Data that is generated from a Weibull distribution can be transformed to approximately normally distributed values quite well as can be recognised by the histogram and the QQ-plot. In contrast, it is not possible to properly transform a sample that is combined from two different distributions (here with different scale parameters of the Weibull distribution) as shown in figure \ref{fig:transformationBimodal}. By the combination of two samples with different mean values a bimodal sample emerges preventing the underlying data to be transformed to a unimodal sample (namely a normally distributed sample) by a simple function. Furthermore, noisy data is not suited for Box-Cox-transformation either because the Box-Cox-function is applied on the whole sample (and not only the "noisy parts").
\newpage
\phantom{.}
\vfill

\begin{figure}[h!]
<<transformationUnimodal, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
par(mfrow=c(2,2))
set.seed(549)
x = rweibull(500, 1)
plot(hist(x, plot=FALSE), main="Histogram of a Weibull(1, 1)\n sample of size 500", xlab="Weibull(1, 1)")
lambda = powerTransform(x)
x.transformed = boxcox(x, lambda$lambda)
plot(hist(x.transformed, plot=FALSE), main="Histogram of the Box-Cox-\n transformed Weibull(1, 1) sample", xlab="transformed Weibull(1, 1)")
plot(qqnorm(x, plot=FALSE), main="Normal Q-Q Plot", xlab="Weibull(1, 1)", ylab="Sample Quantiles")
qqline(x,lwd=2,col="red")
plot(qqnorm(x.transformed, plot=FALSE), main="Normal Q-Q Plot", xlab="transformed Weibull(1, 1)", ylab="Sample Quantiles")
qqline(x.transformed,lwd=2,col="red")
par(mfrow=c(1,1))
@
\includegraphics[width=\textwidth]{report-transformationUnimodal}
\caption{Histograms and QQ-plots of a Weibull(1, 1) simulated sample of size 500 and of the Box-Cox-transformed data}
\label{fig:transformationUnimodal}
\end{figure}

\vfill

\newpage
\phantom{.}
\vfill

\begin{figure}[h!]
<<transformationBimodal, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
par(mfrow=c(2,2))
set.seed(518161878)
x.1 = rweibull(250, 5, 1)
x.2 = rweibull(250, 5, 4)
x.bimodal = c(x.1, x.2)
plot(hist(x.bimodal, plot=FALSE), main="Histogram of a Weibull(5, 1) /\n Weibull(5, 4) mixed sample", xlab="Weibull(5, 1), Weibull(5, 4)")
lambda = powerTransform(x.bimodal)
x.bimodal.transformed = boxcox(x.bimodal, lambda$lambda)
plot(hist(x.bimodal.transformed, plot=FALSE), main="Histogram of the Box-Cox-\n transfomed mixed sample", xlab="transformed Weibull(5, 1), Weibull(5, 4)")
plot(qqnorm(x.bimodal, plot=FALSE), main="Normal Q-Q Plot", xlab="Weibull(5, 1), Weibull(5, 4)", ylab="Sample Quantiles")
qqline(x.bimodal,lwd=2,col="red")
plot(qqnorm(x.bimodal.transformed, plot=FALSE), main="Normal Q-Q Plot", xlab="transformed Weibull(5, 1), Weibull(5, 4)", ylab="Sample Quantiles")
qqline(x.bimodal.transformed,lwd=2,col="red")
par(mfrow=c(1,1))
@
\includegraphics[width=\textwidth]{report-transformationBimodal}
\caption{Histograms and QQ-plots of a mixed sample composed of a Weibull(5, 1) simulated sample and a Weibull(5, 4) simulated sample (each of size 250) and of the Box-Cox-transformed data}
\label{fig:transformationBimodal}
\end{figure}

\vfill




\newpage
\section{Testing the data sample for normality}

\subsection{Testing original data}

\subsubsection{Q-Q-plot}\label{sec:qq-original}
For the graphical analysis the quantiles for all elements in the glass-dataset where plotted for each glass type separately. The graphical comparison shows that for most of the cases there seems to be no linear relationship between the theoretical normally distributed quantiles and the observed values.

\begin{figure}[h!]
\centering
<<QQsamples, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
par(mfrow=c(2,2))
qqnorm(Glass.type1s[["Si"]], main ="Si in Glass Type 1",pch=19,
       cex.lab=1)
qqline(Glass.type1s[["Si"]],lwd=2,col="red")
qqnorm(Glass.type1s[["K"]], main ="K in Glass Type 1",pch=19,
       cex.lab=1)
qqline(Glass.type1s[["K"]],lwd=2,col="red")
qqnorm(Glass.type2s[["Ca"]], main ="Ca in Glass Type 2",pch=19,
       cex.lab=1)
qqline(Glass.type2s[["Ca"]],lwd=2,col="red")
qqnorm(Glass.type2s[["K"]], main ="K in Glass Type 2",pch=19,
       cex.lab=1)
qqline(Glass.type2s[["K"]],lwd=2,col="red")
@
\includegraphics[width=\textwidth]{report-QQsamples}
\caption{Exemplary QQ-Plots from Glass Type 1 where a graphical inspection does not suggest a linear relationship}
\label{fig:QQsamples}
\end{figure}

For some cases based on a graphical inspection a linear relationship can be assumed given some outliers. As shown in Figure \ref{fig:QQsampleslin1} Magnesium (Mg), Aluminium(Al), and Silicon (Si) in glass type 1 and Ca in glass type 7 show approximately linear relationships with just a few outliers. For some observations (e.g. Na in glass type 5 and RI in glass type 6 in Figure \ref{fig:QQsampleslin2}) a linear relationship seems to be plausible, however, the total number of observations in these cases is considered too small to make conclusions about a hypothetical linear relationship (glass type 5: $n$ = 13; glass type 6: $n$ = 9).

\begin{figure}[h!]
\centering
<<QQsampleslin1, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
par(mfrow=c(2,2))
qqnorm(Glass.type1s[["Mg"]], main ="Mg in Glass Type 1",pch=19,
       cex.lab=1)
qqline(Glass.type1s[["Mg"]],lwd=2,col="red")
qqnorm(Glass.type2s[["Al"]], main ="Al in Glass Type 1",pch=19,
       cex.lab=1)
qqline(Glass.type2s[["Al"]],lwd=2,col="red")
qqnorm(Glass.type7s[["Si"]], main ="Si in Glass Type 1",pch=19,
       cex.lab=1)
qqline(Glass.type7s[["Si"]],lwd=2,col="red")
qqnorm(Glass.type7s[["Ca"]], main ="Ca in Glass Type 7",pch=19,
       cex.lab=1)
qqline(Glass.type7s[["Ca"]],lwd=2,col="red")
@
\includegraphics[width=\textwidth]{report-QQsampleslin1}
\caption{QQ-Plots of the cases where a linear relationship seems plausible}
\label{fig:QQsampleslin1}
\end{figure}

%\begin{figure}[h!]
%\centering
<<QQsampleslin2a, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
qqnorm(Glass.type5s[["Na"]], main ="Na in Glass Type 5",pch=19,
       cex.lab=1)
qqline(Glass.type5s[["Na"]],lwd=2,col="red")
@
%\includegraphics[width=\textwidth]{report-QQsampleslin2}
%\caption{QQ-Plots of possible linear relationships with very small sample sizes}
%\label{fig:QQsampleslin2}
%\end{figure}

%\begin{figure}[h!]
%\centering
<<QQsampleslin2b, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
qqnorm(Glass.type6s[["RI"]], main ="RI in Glass Type 6",pch=19,
       cex.lab=1)
qqline(Glass.type6s[["RI"]],lwd=2,col="red")
@
%\includegraphics[width=\textwidth]{report-QQsampleslin2}
%\caption{QQ-Plots of possible linear relationships with very small sample sizes}
%\label{fig:QQsampleslin2}
%\end{figure}

\begin{figure}[H]
\centering
\begin{subfigure}{.5\textwidth}
  \centering
  \includegraphics[width=\linewidth]{report-QQsampleslin2a}
  \vspace{-1cm}
  \caption{}
  \label{fig:QQsampleslin2a}
\end{subfigure}%
\begin{subfigure}{.5\textwidth}
  \centering
  \includegraphics[width=\linewidth]{report-QQsampleslin2b}
  \vspace{-1cm}
  \caption{}
  \label{fig:QQsampleslin2b}
\end{subfigure}
\caption{QQ-Plots of possible linear relationships with very small sample sizes}
\label{fig:QQsampleslin2}
\end{figure}

\subsubsection{Shapiro-Wilk test}\label{sec:shapiro-original}
Performing the Shapiro-Wilk test on the complete dataset at hand, according to the p-values the Null Hypothesis (the data the sample is taken from is normally distributed) is rejected for all the elements.
Testing the different glass types separately, the p-values of majority of the variables are still very small. Consequently, the Null Hypotheses can be rejected for almost all separate cases. For a total 16 cases (over all 6 glass types) the test returned a p-value above or equal to the set alpha-level of 1\, \% (Tables \ref{tab:testrestype1SW} to \ref{tab:testrestype7SW}). However, the majority of the cases for which the Null Hypothesis holds stems from the three subdatasets containing significantly less observations (Tables \ref{tab:testrestype3SW} to \ref{tab:testrestype6SW}). For glass type 1 H0 is rejected for all the variables (see Table \ref{tab:testrestype1SW}). For glass type 2 it only holds for Aluminium (Al) and for glass type 7 only for Aluminium (Al) and Barium (Ba) (see Tables \ref{tab:testrestype2SW} and \ref{tab:testrestype7SW}).
More than 80\, \% of the total rejections in the 6 tests (13 out of 16) stem from the three smaller subdatasets glass type 3, glass type 5, and glass type 6. These results raise the question if the low number of rejections is due to the smaller sample size in these cases. Looking only at the glass types 1, 2, and 7, a normal distribution can be rejected for most of the cases.


<<calcSWresults, echo=FALSE, term=TRUE>>=
sig=0.01
shapresult.full <- apply(Glass[,-10], 2, shapiro.test)
shapresult.type1 <- apply(Glass.type1s, 2, shapiro.test)
shapresult.type2 <- apply(Glass.type2s, 2, shapiro.test)
shapresult.type3 <- apply(Glass.type3s, 2, shapiro.test)
shapresult.type5 <- apply(Glass.type5s, 2, shapiro.test)
shapresult.type6 <- apply(Glass.type6s, 2, shapiro.test)
shapresult.type7 <- apply(Glass.type7s, 2, shapiro.test)
@

\begin{table}[h!]
\centering
<<testresFullSW, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.full

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  pvalue = tr[[varname]][["p.value"]]
  cat(paste(
    varname,
    round(tr[[varname]][["statistic"]], 2),
    sig,
    "NA",
    ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
    ifelse(pvalue<=sig, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on the whole data sample}
\label{tab:testresFullSW}
\end{table}

\begin{table}[h!]
\centering
<<testrestype1SW, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type1

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  pvalue = tr[[varname]][["p.value"]]
  cat(paste(
    varname,
    round(tr[[varname]][["statistic"]], 2),
    sig,
    "NA",
    ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
    ifelse(pvalue<=sig, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on type 1 glass}
\label{tab:testrestype1SW}
\end{table}

\begin{table}[h!]
\centering
<<testrestype2SW, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type2

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  pvalue = tr[[varname]][["p.value"]]
  cat(paste(
    varname,
    round(tr[[varname]][["statistic"]], 2),
    sig,
    "NA",
    ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
    ifelse(pvalue<=sig, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on type 2 glass}
\label{tab:testrestype2SW}
\end{table}

\begin{table}[h!]
\centering
<<testrestype3SW, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type3

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  pvalue = tr[[varname]][["p.value"]]
  cat(paste(
    varname,
    round(tr[[varname]][["statistic"]], 2),
    sig,
    "NA",
    ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
    ifelse(pvalue<=sig, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on type 3 glass}
\label{tab:testrestype3SW}
\end{table}

\begin{table}[h!]
\centering
<<testrestype5SW, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type5

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  pvalue = tr[[varname]][["p.value"]]
  cat(paste(
    varname,
    round(tr[[varname]][["statistic"]], 2),
    sig,
    "NA",
    ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
    ifelse(pvalue<=sig, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on type 5 glass}
\label{tab:testrestype5SW}
\end{table}

\begin{table}[h!]
\centering
<<testrestype6SW, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type6

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  pvalue = tr[[varname]][["p.value"]]
  cat(paste(
    varname,
    round(tr[[varname]][["statistic"]], 2),
    sig,
    "NA",
    ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
    ifelse(pvalue<=sig, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on type 6 glass}
\label{tab:testrestype6SW}
\end{table}

\begin{table}[h!]
\centering
<<testrestype7SW, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type7

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  pvalue = tr[[varname]][["p.value"]]
  cat(paste(
    varname,
    round(tr[[varname]][["statistic"]], 2),
    sig,
    "NA",
    ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
    ifelse(pvalue<=sig, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on type 7 glass}
\label{tab:testrestype7SW}
\end{table}


\subsubsection{Pearson's chi-squared test}
<<calculatChisq, echo=FALSE>>=
testresult.full = apply(Glass[, -10], 2, chisq.test.norm, initial_breaks=10, min=5, sig=0.01)
testresult.type1 = apply(Glass.type1[, c(-8,-10)], 2, chisq.test.norm, initial_breaks=10, min=5, sig=0.01)
testresult.type2 = apply(Glass.type2[, c(-8,-10)], 2, chisq.test.norm, initial_breaks=10, min=5, sig=0.01)
testresult.type7 = apply(Glass.type7[, c(-3,-9)], 2, chisq.test.norm, initial_breaks=10, min=5, sig=0.01)

testresult.full.30 = apply(Glass[, -10], 2, chisq.test.norm, initial_breaks=30, min=5, sig=0.01)
testresult.type1.30 = apply(Glass.type1[, c(-8,-10)], 2, chisq.test.norm, initial_breaks=30, min=5, sig=0.01)
testresult.type2.30 = apply(Glass.type2[, c(-8,-10)], 2, chisq.test.norm, initial_breaks=30, min=5, sig=0.01)
testresult.type7.30 = apply(Glass.type7[, c(-3,-9)], 2, chisq.test.norm, initial_breaks=30, min=5, sig=0.01)
@

As mentioned in section \ref{sec:chisq-theoretical}, Pearson's chi-squared test is not suited for rather small sample sizes because of the approximation via the chi-squared distribution. Concerning the given data, the samples of type 3 glass (\Sexpr{length(Glass.type3$RI)} observations), type 5 glass (\Sexpr{length(Glass.type5$RI)} observations) and type 6 glass (\Sexpr{length(Glass.type6$RI)} observations) are not large enough to ensure a viable test result. Hence, the data belonging to those types will not be considered for separate tests. However, it will remain in the overall data sample of all types. The minimum size of observations in each class is set to five and the number of initial classes (\ie number of classes before unifying) will be ten. The first tests are conducted on the whole data set for each variable. The results are shown in table \ref{tab:chi-full}. For two variables, it is not possible to determine a test result with the given parameters: The observations of the variables Potassium (K) and Barium (Ba) are divided only into three classes respectively after the unification of classes in order to fulfill the requirement of minimum class size. Since one degree of freedom is subtracted always and two degrees of freedom are subtracted for the estimation of the mean value and the standard deviation, zero degrees of freedom remain and so the critical value cannot be calculated. For each of the other variables, the hypothesis of normality is clearly rejected for the given significance level.

\begin{table}[h!]
\centering
<<testresFull, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.full

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value),
    ifelse(tr[i][[1]]$rejected, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on the whole data sample with ten initial classes}
\label{tab:chi-full}
\end{table}

The results for type 1 glass (table \ref{tab:chi-type1}) are slightly different; in this case, the results can be determined for each variable (except for Barium (Ba), which has been dropped beforehand) and the hypothesis of normality is rejected for each variable but Sodium (Na). The p-value for Sodium is comparably high amounting to approximately \Sexpr{round(testresult.type1$Na$p_value, 2)}. It is well recognisable that the observed class frequencies for Sodium fluctuate around the expected class frequencies under the hypothesis of a normal distribution with the according parameters (table \ref{tab:testresChisqFreqNaType1}). The good compliance of empirical and hypothetical data for this variable is illustrated in figure \ref{fig:chisqType1Na}. In general, the p-values for this part of the sample are higher than those for the whole sample.

\begin{table}[h!]
\centering
<<testresType1, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type1

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value),
    ifelse(tr[i][[1]]$rejected, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on type 1 glass with ten initial classes}
\label{tab:chi-type1}
\end{table}

\begin{table}[h!]
\centering
<<testresChisqFreqNaType1, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|c|cc|} ")
cat("\\hline ")
cat(paste("class & \\multicolumn{2}{c|}{frequencies}\\\\ ", "\n", sep=""))
cat(paste("(interval) & observed & expected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type1$Na

for(i in 1:(length(tr$hist$counts))) {
  cat(paste(
    paste0("]", tr$hist$breaks[i], ", ", tr$hist$breaks[i+1], "]"),
    tr$hist$counts[i],
    round(tr$expected_frequencies[i], 2),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Observed end expected frequencies of items in the classes for the variable Natrium of type 1 glass}
\label{tab:testresChisqFreqNaType1}
\end{table}

\begin{figure}[h!]
\centering
<<chisqType1Na, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
testres = chisq.test.norm(Glass.type1$Na, 10, 5, 0.05)
hist=testres$hist
hist.exp=histFromExpectedFreqs(testres)
plot(hist, col=rgb(1, 0, 0,0.5), main="Histogram of observed and expected densities", xlab="amount of Natrium in [unit]")
plot(hist.exp, col=rgb(0, 0, 1,0.5), add=TRUE)
@
\includegraphics[width=0.8\textwidth]{report-chisqType1Na}
\caption{Histogram of observed densities (red) and expected densities (blue) within the classes for the variable Natrium of type 1 glass}
\label{fig:chisqType1Na}
\end{figure}

The test results for observations of type 2 glass are summarised in table \ref{tab:chi-type2}. The null hypothesis is rejected for all variables except for Aluminium (Al) and Silicon (Si). The p-values for these variables are however rather small (approximately \Sexpr{round(testresult.type2$Al$p_value, 2)} and \Sexpr{round(testresult.type2$Si$p_value, 2)}).

\begin{table}[h]
\centering
<<testresType2, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type2

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value),
    ifelse(tr[i][[1]]$rejected, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on type 2 glass with ten initial classes}
\label{tab:chi-type2}
\end{table}

For the observations of type 7 glass, test results (table \ref{tab:chi-type7}) are only available for the variable Aluminium (Al). Due to the small sample size of \Sexpr{length(Glass.type7$RI)} observations, most of the initial classes are joined so that no degree of freedom remains for the chi-squared distribution function. The hypothesis of normality is not rejected for the data of Aluminium.

\begin{table}[h!]
\centering
<<testresType7, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type7

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value),
    ifelse(tr[i][[1]]$rejected, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on type 7 glass with ten initial classes}
\label{tab:chi-type7}
\end{table}

As mentioned in section \ref{sec:chisq-theoretical}, Pearson's chi-squared test is inconsistent when the number or bounds of classes are changed. This inconsistency can also be observed with the present data set. The test have also been conducted with 30 initial classes each (see tables \ref{tab:chi-full-30} to \ref{tab:chi-type7-30} in the appendix) with partly different results. Whereas with ten initial classes, there are not enough classes left for most of the variables of type 7 glass to be tested, the data is divided in a sufficient number of classes when using 30 initial classes. Above all, the null hypothesis is not rejected for Aluminium (Al) of type 2 glass with ten initial classes but it is rejected with 30 initial classes while the opposite is true for Sodium (Na). In general, the p-values can alternate much with different classes; so the rather high p-value for Sodium of type 1 glass ($\sim$ \Sexpr{round(testresult.type1$Na$p_value, 2)}) with ten initial classes decreases to approximately \Sexpr{round(testresult.type1.30$Na$p_value, 2)} with 30 initial classes. On the contrary, the p-value for Aluminium of type 7 glass ($\sim$ \Sexpr{round(testresult.type7$Al$p_value, 2)}) increases to approximately \Sexpr{round(testresult.type7.30$Al$p_value, 2)}. These different impacts on the test results are due to two opposing effects: First, with more classes there are more degrees of freedom for the chi-squared distribution and thus the critical value increases. Second, the test statistic tends to increase as well because the observations have to fit to smaller classes more precisely; or in other words, observations may be distorted (relatively to the hypothetical expectations) within a large class so that differences between empirical and hypothetical data do not raise the test statistic as much as the same observations would if they were divided into smaller classes (making the distortion "measurable").

\subsubsection{Kolmogorov-Smirnov test}



\subsection{Testing transformed data}\label{sec:testing-transformed-data}

The same tests are now conducted on the data that have been Box-Cox-transformed with a parameter that is estimated by the maximum likelihood method. For some variables, an estimation is not possible because the algorithm does not converge or, as in most cases, not all of the observations of one variable are strictly positive.

\subsubsection{Q-Q-plot}\label{sec:qq-transformed}

Before testing statistically, the results of the transformation can be examined graphically by again plotting the quantiles of the transformed data and comparing these plots with the QQ-plots from the original data in section \ref{sec:qq-original}. For some of the elements in the dataset the transformation leads to a slight approximation towards normality (figure \ref{fig:QQtrans}). However, for rather complicated cases (e. g. where several distributions seem to be combined) the transformation appearently does not produce normally distributed data (figure \ref{fig:QQtransno}). In these cases the initial distribution is not unimodal and therefore the Box-Cox-transformation is not very helpful (see section \ref{sec:Box-Cox-transformation} for a detailed explanation).

\begin{figure}[h!]
\centering
<<QQtrans, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
Glass.t <- transformDataFrame(Glass[,-10])
Glass.type1s.t <- transformDataFrame(Glass.type1s)
Glass.type2s.t <- transformDataFrame(Glass.type2s)
Glass.type3s.t <- transformDataFrame(Glass.type3s)
Glass.type5s.t <- transformDataFrame(Glass.type5s)
Glass.type6s.t <- transformDataFrame(Glass.type6s)
Glass.type7s.t <- transformDataFrame(Glass.type7s)

par(mfrow=c(2,2))
qqnorm(Glass.type1s[["Na"]], main ="Na Glass Type 1",pch=19,
       cex.lab=1)
qqline(Glass.type1s[["Na"]],lwd=2,col="red")
qqnorm(Glass.type1s.t[["Na"]], main ="Na Glass Type 1 transformed",pch=19,
       cex.lab=1)
qqline(Glass.type1s.t[["Na"]],lwd=2,col="red")
qqnorm(Glass.type7s[["Ca"]], main ="Ca Glass Type 7",pch=19,
       cex.lab=1)
qqline(Glass.type7s[["Ca"]],lwd=2,col="red")
qqnorm(Glass.type7s.t[["Ca"]], main ="Ca Glass Type 7 transformed",pch=19,
       cex.lab=1)
qqline(Glass.type7s.t[["Ca"]],lwd=2,col="red")
par(mfrow=c(1,1))
@
\includegraphics[width=\textwidth]{report-QQtrans}
\caption{QQ-Plots of the cases where the transformation shows slight approximations to normality}
\label{fig:QQtrans}
\end{figure}

\begin{figure}[h!]
\centering
<<QQtransno, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=

par(mfrow=c(2,2))
qqnorm(Glass.type1s[["RI"]], main ="RI Glass Type 1",pch=19,
       cex.lab=1)
qqline(Glass.type1s[["RI"]],lwd=2,col="red")
qqnorm(Glass.type1s.t[["RI"]], main ="RI Glass Type 1 transformed",pch=19,
       cex.lab=1)
qqline(Glass.type1s.t[["RI"]],lwd=2,col="red")
qqnorm(Glass.type1s[["Si"]], main ="Si Glass Type 1",pch=19,
       cex.lab=1)
qqline(Glass.type1s[["Si"]],lwd=2,col="red")
qqnorm(Glass.type1s.t[["Si"]], main ="Si Glass Type 1 transformed",pch=19,
       cex.lab=1)
qqline(Glass.type1s.t[["Si"]],lwd=2,col="red")
@
\includegraphics[width=\textwidth]{report-QQtransno}
\caption{QQ-Plots of the non-unimodal cases where the transformation does not lead to normal distributions}
\label{fig:QQtransno}
\end{figure}


\subsubsection{Shapiro-Wilk test}\label{sec:shapiro-transformed}

When performing the Shapiro-Wilk test on the whole transformed data, at the first glance the transformation does not seem to have had the desired impact on the data. As displayed in table \ref{tab:testresFullSWtrans} for all elements the Null Hypothesis is rejected. Although the p-values increased, they are still below the 1\, \% significance level, so there is no fundamental difference to the results from testing the original data.

However, proceeding analogously to section \ref{sec:shapiro-original} and testing the different glass types separately, these separate results reveal some improvements.

Glass type 1 shows the largest number of improvements, since in the original dataset the Null hypothesis was rejected for all variables. The test results of the transformed type 1 data from table \ref{tab:testrestype1SWtrans} show significantly increased p-values. For the three variables Sodium (Na), Aluminium (Al), and Calcium (Ca) now a normal distribution cannot be rejected any more.

For the glass types 2 and 3 there are no changes in the number of rejections at the 1\, \% significance level (tables \ref{tab:testrestype2SWtrans} and \ref{tab:testrestype3SWtrans}). In fact the the p-values of the variables increased considerably with the transformation, however, they still lie below the alpha level.

The test on the transformed glass type 5 data shows that, in addition to refractive index (RI), Sodium (Na), Silicon (Si), and Calcium (Ca), now for Aluminium (Al) and Potassium (K) a normal distribution cannot be rejected any more (see table \ref{tab:testrestype6SWtrans}).

Furthermore for glass type 6 the p-values increase significantly as well, except for Silicon (Si) which only slightly increases (see table \ref{tab:testrestype6SWtrans}). Consequently, H0 is, analogously to the original data, not rejected for Aluminium (Al), Silicon (Si), and Calcium (Ca), plus the refractive index (RI) for which H0 cannot be rejected after the transformation.

The test results of the transformed glass type 7 data show that for Aluminium (Al) the Null hypothesis still cannot be rejected. Due to contained zero-values Barium (Ba) is excluded from the transformation (see section \ref{sec:testing-transformed-data}) and therefore nothing is concluded about this specific variable. Furthermore, the result shows that the p-values of Sodium (Na) and Calcium (Ca) considerably increase and exceed the 1\, \% significance level after the transformation.

In a nutshell, the Shapiro-Wilk test shows shows significant improvements towards a normal distribution of the variables when the Box-Cox-transformation is used and the different glass types are analysed separately. Analysing the full dataset also shows some minor improvements of the p-values, however, H0 is still rejected at the chosen significance level. An explanation for this result could be that in the full dataset different distributions of the different distinctive glass types are combined and therefore the Box-Cox-transformation does not improve the distribution (see section \ref{sec:boxcox-theory}).


<<calcSWresultstrans, echo=FALSE, term=TRUE>>=

shapresult.full.t <- sapply(colnames(Glass.t[,-10]), function(x) {
  if (is.na(Glass.t[[x]][1])) {
  }
  else {
    shapiro.test(Glass.t[[x]])
  }
})

shapresult.type1.t <- sapply(colnames(Glass.type1s.t), function(x) {
  if (is.na(Glass.type1s.t[[x]][1])) {
  }
  else {
    shapiro.test(Glass.type1s.t[[x]])
  }
})

shapresult.type2.t <- sapply(colnames(Glass.type2s.t), function(x) {
  if (is.na(Glass.type2s.t[[x]][1])) {
  }
  else {
    shapiro.test(Glass.type2s.t[[x]])
  }
})

shapresult.type3.t <- sapply(colnames(Glass.type3s.t), function(x) {
  if (is.na(Glass.type3s.t[[x]][1])) {
  }
  else {
    shapiro.test(Glass.type3s.t[[x]])
  }
})

shapresult.type5.t <- sapply(colnames(Glass.type5s.t), function(x) {
  if (is.na(Glass.type5s.t[[x]][1])) {
  }
  else {
    shapiro.test(Glass.type5s.t[[x]])
  }
})

shapresult.type6.t <- sapply(colnames(Glass.type6s.t), function(x) {
  if (is.na(Glass.type6s.t[[x]][1])) {
  }
  else {
    shapiro.test(Glass.type6s.t[[x]])
  }
})

shapresult.type7.t <- sapply(colnames(Glass.type7s.t), function(x) {
  if (is.na(Glass.type7s.t[[x]][1])) {
  }
  else {
    shapiro.test(Glass.type7s.t[[x]])
  }
})
@


\begin{table}[h!]
\centering
<<testresFullSWtrans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.full.t

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  if (is.null(tr[[varname]])) {
    cat(paste(varname, "NA", "NA", "NA", "NA", "NA", sep=" & "))
    cat(paste("\\\\ ", "\n", sep=""))
  }
  else {
    pvalue = tr[[varname]][["p.value"]]
    cat(paste(
      varname,
      round(tr[[varname]][["statistic"]], 2),
      sig,
      "NA",
      ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
      ifelse(pvalue<=sig, "yes", "no"),
             sep=" & "), "\\\\ ", "\n", sep="")
  }
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on the whole transformed data sample}
\label{tab:testresFullSWtrans}
\end{table}

\begin{table}[h!]
\centering
<<testrestype1SWtrans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type1.t

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  if (is.null(tr[[varname]])) {
    cat(paste(varname, "NA", "NA", "NA", "NA", "NA", sep=" & "))
    cat(paste("\\\\ ", "\n", sep=""))
  }
  else {
    pvalue = tr[[varname]][["p.value"]]
    cat(paste(
      varname,
      round(tr[[varname]][["statistic"]], 2),
      sig,
      "NA",
      ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
      ifelse(pvalue<=sig, "yes", "no"),
             sep=" & "), "\\\\ ", "\n", sep="")
  }
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on the transformed type 1 glass}
\label{tab:testrestype1SWtrans}
\end{table}

\begin{table}[h!]
\centering
<<testrestype2SWtrans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type2.t

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  if (is.null(tr[[varname]])) {
    cat(paste(varname, "NA", "NA", "NA", "NA", "NA", sep=" & "))
    cat(paste("\\\\ ", "\n", sep=""))
  }
  else {
    pvalue = tr[[varname]][["p.value"]]
    cat(paste(
      varname,
      round(tr[[varname]][["statistic"]], 2),
      sig,
      "NA",
      ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
      ifelse(pvalue<=sig, "yes", "no"),
             sep=" & "), "\\\\ ", "\n", sep="")
  }
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on the transformed type 2 glass}
\label{tab:testrestype2SWtrans}
\end{table}

\begin{table}[h!]
\centering
<<testrestype3SWtrans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type3.t

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  if (is.null(tr[[varname]])) {
    cat(paste(varname, "NA", "NA", "NA", "NA", "NA", sep=" & "))
    cat(paste("\\\\ ", "\n", sep=""))
  }
  else {
    pvalue = tr[[varname]][["p.value"]]
    cat(paste(
      varname,
      round(tr[[varname]][["statistic"]], 2),
      sig,
      "NA",
      ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
      ifelse(pvalue<=sig, "yes", "no"),
             sep=" & "), "\\\\ ", "\n", sep="")
  }
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on the transformed type 3 glass}
\label{tab:testrestype3SWtrans}
\end{table}

\begin{table}[h!]
\centering
<<testrestype5SWtrans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type5.t

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  if (is.null(tr[[varname]])) {
    cat(paste(varname, "NA", "NA", "NA", "NA", "NA", sep=" & "))
    cat(paste("\\\\ ", "\n", sep=""))
  }
  else {
    pvalue = tr[[varname]][["p.value"]]
    cat(paste(
      varname,
      round(tr[[varname]][["statistic"]], 2),
      sig,
      "NA",
      ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
      ifelse(pvalue<=sig, "yes", "no"),
             sep=" & "), "\\\\ ", "\n", sep="")
  }
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on the transformed type 5 glass}
\label{tab:testrestype5SWtrans}
\end{table}

\begin{table}[h!]
\centering
<<testrestype6SWtrans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type6.t

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  if (is.null(tr[[varname]])) {
    cat(paste(varname, "NA", "NA", "NA", "NA", "NA", sep=" & "))
    cat(paste("\\\\ ", "\n", sep=""))
  }
  else {
    pvalue = tr[[varname]][["p.value"]]
    cat(paste(
      varname,
      round(tr[[varname]][["statistic"]], 2),
      sig,
      "NA",
      ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
      ifelse(pvalue<=sig, "yes", "no"),
             sep=" & "), "\\\\ ", "\n", sep="")
  }
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on the transformed type 6 glass}
\label{tab:testrestype6SWtrans}
\end{table}

\begin{table}[h!]
\centering
<<testrestype7SWtrans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=shapresult.type7.t

for(i in 1:(length(tr))) {
  varname = names(tr[i])
  if (is.null(tr[[varname]])) {
    cat(paste(varname, "NA", "NA", "NA", "NA", "NA", sep=" & "))
    cat(paste("\\\\ ", "\n", sep=""))
  }
  else {
    pvalue = tr[[varname]][["p.value"]]
    cat(paste(
      varname,
      round(tr[[varname]][["statistic"]], 2),
      sig,
      "NA",
      ifelse(pvalue < 1e-15, "< 1.0e-15", pvalue),
      ifelse(pvalue<=sig, "yes", "no"),
             sep=" & "), "\\\\ ", "\n", sep="")
  }
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the Shapiro-Wilk test on the transformed type 7 glass}
\label{tab:testrestype7SWtrans}
\end{table}



\subsubsection{Pearson's chi-squared test}
<<calculatChisqTrans, echo=FALSE>>=
testresult.full.trans = apply(transformDataFrame(Glass[, -10]), 2, chisq.test.norm.eh, initial_breaks=10, min=5, sig=0.01)
testresult.type1.trans = apply(transformDataFrame(Glass.type1[, c(-8,-10)]), 2, chisq.test.norm.eh, initial_breaks=10, min=5, sig=0.01)
testresult.type2.trans = apply(transformDataFrame(Glass.type2[, c(-8,-10)]), 2, chisq.test.norm.eh, initial_breaks=10, min=5, sig=0.01)
testresult.type7.trans = apply(transformDataFrame(Glass.type7[, c(-3,-9)]), 2, chisq.test.norm.eh, initial_breaks=10, min=5, sig=0.01)
@
Although for all variables for which a transformation is possible the p-value is higher than for the non-transformed data, the hypothesis of normality is still rejected for the whole sample (table \ref{tab:chi-full-trans}). The data of all types of glass is presumably too heterogenuous so that it comprises samples from several distributions within the overall sample of particular variables.

\begin{table}[h!]
\centering
<<testresFullTrans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.full.trans

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(is.na(tr[i][[1]]$p_value), NA, ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value)),
    ifelse(is.na(tr[i][[1]]$rejected), NA, ifelse(tr[i][[1]]$rejected, "yes", "no")),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on the whole transformed data sample with ten initial classes}
\label{tab:chi-full-trans}
\end{table}

Concerning the transformation of type 1 glass, two more variables (Al and Ca) are now tested positively on the hypothesis of normality (table \ref{tab:chi-type1-trans}). In both cases, the p-value is be increased substantially by the Box-Cox-transformation. For the variable Calcium, the frequencies of the original data are slightly shifted to lower values (figure \ref{fig:chisqType1Ca}) whereas the transformation fits the data approximately to an according normal distribution (figure \ref{fig:chisqType1CaTrans}).

\begin{table}[h!]
\centering
<<testresType1Trans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type1.trans

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(is.na(tr[i][[1]]$p_value), NA, ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value)),
    ifelse(is.na(tr[i][[1]]$rejected), NA, ifelse(tr[i][[1]]$rejected, "yes", "no")),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on the transformed data of type 1 glass with ten initial classes}
\label{tab:chi-type1-trans}
\end{table}



\begin{figure}[h!]
\centering
<<chisqType1Ca, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
testres = chisq.test.norm(Glass.type1$Ca, 10, 5, 0.05)
hist=testres$hist
hist.exp=histFromExpectedFreqs(testres)
plot(hist, col=rgb(1, 0, 0,0.5), main="Histogram of observed and expected densities", xlab="amount of Calcium in [unit]")
plot(hist.exp, col=rgb(0, 0, 1,0.5), add=TRUE)
@
\includegraphics[width=0.8\textwidth]{report-chisqType1Ca}
\caption{Histogram of observed densities (red) and expected densities (blue) within the classes for the variable Calcium of type 1 glass}
\label{fig:chisqType1Ca}
\end{figure}

\begin{figure}[h!]
\centering
<<chisqType1CaTrans, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
testres = chisq.test.norm(transformVector(Glass.type1$Ca), 10, 5, 0.05)
hist=testres$hist
hist.exp=histFromExpectedFreqs(testres)
plot(hist, col=rgb(1, 0, 0,0.5), main="Histogram of observed and expected densities", xlab="transformed amount of Calcium in [unit]")
plot(hist.exp, col=rgb(0, 0, 1,0.5), add=TRUE)
@
\includegraphics[width=0.8\textwidth]{report-chisqType1CaTrans}
\caption{Histogram of observed densities (red) and expected densities (blue) within the classes for transformed values of the variable Calcium of type 1 glass}
\label{fig:chisqType1CaTrans}
\end{figure}



Similar effects can be observed for the results of type 2 glass (table \ref{tab:chi-type2-trans}). Here, the hypothesis of normality is additionally not rejected for the variable Natrium.

\begin{table}[h!]
\centering
<<testresType2Trans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type2.trans

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(is.na(tr[i][[1]]$p_value), NA, ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value)),
    ifelse(is.na(tr[i][[1]]$rejected), NA, ifelse(tr[i][[1]]$rejected, "yes", "no")),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on the transformed data of type 2 glass with ten initial classes}
\label{tab:chi-type2-trans}
\end{table}

For the observations of type 7 glass, the test can now even be conducted on data of the variable Natrium, which were not properly distributed to perform the test before, \ie the data were not divided into a sufficient number of classes (table \ref{tab:chi-type7-trans}).

\begin{table}[h!]
\centering
<<testresType7Trans, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type7.trans

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(is.na(tr[i][[1]]$p_value), NA, ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value)),
    ifelse(is.na(tr[i][[1]]$rejected), NA, ifelse(tr[i][[1]]$rejected, "yes", "no")),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on the transformed data of type 7 glass with ten initial classes}
\label{tab:chi-type7-trans}
\end{table}

\subsubsection{Kolmogorov-Smirnov test}

\newpage
\section{Conclusion}












\newpage
\section{Section 1}
Example for referring to a chapter: As written in section \ref{Intr} ...

  \subsection{First Subsection}
	Example for a citation: \cite{sqltuerker},\cite{journals/jods/VolzSM05}, \cite{das}\\
	%% you might need to compile the tex-file several times (pdfLaTeX, BibTeX, pdfLaTeX)
	%% in order to see the correct citations instead of question marks: "?"

	\begin{figure}[t!]
	\centering
	  \includegraphics[height=0.49\textwidth,angle=90]{images/ercis.png}
	    \caption{Logo of ERCIS as an example for figures}
	  \label{ERCIS_Logo}
	\end{figure}

  \subsection{Second Subsection}

\newpage
\section{Section 2}
Here could be a table, e.g. table \ref{tab} (which is on page \pageref{tab}):

\begin{table}[ht] 
   \centering
      \begin{tabular}{|c||c|c|c|c|} \hline
			& \multicolumn{4}{c|}{Feature 2} 						\\
	Feature 1 & \multicolumn{2}{c|}{case} & \multicolumn{2}{c|}{studies}	\\
			& ca 			& te 		& go 	& ry 					\\ \hline \hline
	data 		& 63,50\% 	& 9,56\% 	& 2,16\% 	& 1,17\% 				\\ \hline
	analytics 	& 1,57\% 		& 0,41\% 	& 0,29\% 	& 0,41\% 				\\ \hline
      \end{tabular}
      \caption{This is the label of the table}
   \label{tab}
\end{table}


If you want to relate to a figure or table from a different page, you could do it this way: Figure \ref{ERCIS_Logo}, see page \pageref{ERCIS_Logo}, shows the ERCIS-Logo.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% appendix

\newpage

\begin{appendix}
\pagenumbering{roman}		%% roman page numbers for the appendix



\section{Appendix}

\begin{table}[h!]
\centering
<<testresFull, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.full.30

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value),
    ifelse(tr[i][[1]]$rejected, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on the whole data sample with 30 initial classes}
\label{tab:chi-full-30}
\end{table}

\begin{table}[h!]
\centering
<<testresType2-30, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type1.30

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value),
    ifelse(tr[i][[1]]$rejected, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on type 1 glass with 30 initial classes}
\label{tab:chi-type1-30}
\end{table}

\begin{table}[h!]
\centering
<<testresType2-30, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type2.30

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value),
    ifelse(tr[i][[1]]$rejected, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on type 2 glass with 30 initial classes}
\label{tab:chi-type2-30}
\end{table}

\begin{table}[h!]
\centering
<<testresType7-30, echo=FALSE, term=TRUE, results=tex>>=
cat("\\begin{tabular}{|cccccc|} ")
cat("\\hline ")
cat(paste("variable & test statistic & sig. level & critical value & p-value & rejected\\\\ ", "\n", sep=""))
cat("\\hline ")
tr=testresult.type7.30

for(i in 1:(length(tr))) {
  cat(paste(
    names(tr[i]),
    round(tr[i][[1]]$teststat, 2),
    0.01,
    round(tr[i][[1]]$critical_value, 2),
    ifelse(tr[i][[1]]$p_value < 1e-15, "< 1.0e-15", tr[i][[1]]$p_value),
    ifelse(tr[i][[1]]$rejected, "yes", "no"),
           sep=" & "), "\\\\ ", "\n", sep="")
}

cat("\\hline ")
cat(paste("\\end{tabular}", "\n", sep=""))
@
\caption{Test results of the chi-squared test on type 7 glass with 30 initial classes}
\label{tab:chi-type7-30}
\end{table}

%%% to be deleted:
\begin{figure}[h!]
\centering
<<chisqType2Na, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
testres = chisq.test.norm(Glass.type2$Na, 10, 5, 0.01)
hist=testres$hist
hist.exp=histFromExpectedFreqs(testres)
plot(hist, col=rgb(1, 0, 0,0.5), main="Histogram of observed and expected densities", xlab="amount of Natrium in [unit]")
plot(hist.exp, col=rgb(0, 0, 1,0.5), add=TRUE)
@
\includegraphics[width=0.6\textwidth]{report-chisqType2Na}
\caption{Histogram of observed densities (red) and expected densities (blue) within the classes for the variable Natrium of type 1 glass}
\label{fig:1}
\end{figure}

\begin{figure}[h!]
\centering
<<chisqType2Na-30, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
testres = chisq.test.norm(Glass.type2$Na, 30, 5, 0.01)
hist=testres$hist
hist.exp=histFromExpectedFreqs(testres)
plot(hist, col=rgb(1, 0, 0,0.5), main="Histogram of observed and expected densities", xlab="amount of Natrium in [unit]")
plot(hist.exp, col=rgb(0, 0, 1,0.5), add=TRUE)
@
\includegraphics[width=0.6\textwidth]{report-chisqType2Na-30}
\caption{Histogram of observed densities (red) and expected densities (blue) within the classes for the variable Natrium of type 1 glass}
\label{fig:2}
\end{figure}

\begin{figure}[h!]
\centering
<<chisqType2Al, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
testres = chisq.test.norm(Glass.type2$Al, 10, 5, 0.01)
hist=testres$hist
hist.exp=histFromExpectedFreqs(testres)
plot(hist, col=rgb(1, 0, 0,0.5), main="Histogram of observed and expected densities", xlab="amount of Natrium in [unit]")
plot(hist.exp, col=rgb(0, 0, 1,0.5), add=TRUE)
@
\includegraphics[width=0.6\textwidth]{report-chisqType2Al}
\caption{Histogram of observed densities (red) and expected densities (blue) within the classes for the variable Natrium of type 1 glass}
\label{fig:1}
\end{figure}

\begin{figure}[h!]
\centering
<<chisqType2Al-30, eval=TRUE, echo=FALSE, term=FALSE, fig=TRUE, include=FALSE>>=
testres = chisq.test.norm(Glass.type2$Al, 30, 5, 0.01)
hist=testres$hist
hist.exp=histFromExpectedFreqs(testres)
plot(hist, col=rgb(1, 0, 0,0.5), main="Histogram of observed and expected densities", xlab="amount of Natrium in [unit]")
plot(hist.exp, col=rgb(0, 0, 1,0.5), add=TRUE)
@
\includegraphics[width=0.6\textwidth]{report-chisqType2Al-30}
\caption{Histogram of observed densities (red) and expected densities (blue) within the classes for the variable Natrium of type 1 glass}
\label{fig:2}
\end{figure}

\end{appendix}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% lists of figures and tables

\newpage
\listoffigures
\listoftables

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% bibliography (if needed)

%\nocite{*}
\bibliographystyle{plain}
\bibliography{lit}

\end{document}
